// This is a single project

// apply plugin: 'eclipse'         // adds support for eclipse project generation
// apply plugin: 'idea'            // adds support for IDEA project generation
apply from: 'gradle/setup.gradle'
apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    // mavenLocal()
    // maven { url 'http://repo.springsource.org/release' }
    // maven { url "http://repo.springsource.org/plugins-release" }
    // maven { url "http://repo.springsource.org/libs-snapshot" }
    maven { url 'http://dist.gemstone.com/maven/release' }
    // maven { url 'http://repo.typesafe.com/typesafe/releases' }
    // maven { url 'http://download.java.net/maven/2' }
    // maven { url 'https://repository.apache.org/content/groups/snapshots' }
    // maven { url 'url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    // put sub-dependencies first to control the exact version
    // and avoid duplicates
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "com.rabbitmq:amqp-client:$rabbitVersion"
    compile "com.gemstone.gemfire:gemfire:$gemfireVersion"

    // Use http://search.maven.org/#search%7Cga%7C1%7Cg%3Aorg.springframework%2C%20v%3A3.2.3.RELEASE
    // to find dependencies
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"

    compile "org.springframework.amqp:spring-amqp:$springAmqpVersion"
    compile "org.springframework.amqp:spring-rabbit:$springAmqpVersion"

    compile "org.springframework.data:spring-data-gemfire:$springGemfireVersion"

    // Or use: https://github.com/springsource/spring-integration 
    // to find more dependencies
    compile "org.springframework.integration:spring-integration-amqp:$siVersion"
    compile "org.springframework.integration:spring-integration-core:$siVersion"
    compile "org.springframework.integration:spring-integration-gemfire:$siVersion"
    compile "org.springframework.integration:spring-integration-jmx:$siVersion"
    compile "org.springframework.integration:spring-integration-ip:$siVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.springframework.integration:spring-integration-test:$siVersion"

}

test {
    testLogging.showStandardStreams = true
//    onOutput { descriptor, event ->
//        logger.lifecycle("${descriptor} ${event.message}")
//    }
}
